/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 C:\Users\Usuario\Desktop\react3f\react3f\public\models\65b10d74a8cd1dfdd70b6dd1.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { useControls} from "leva";
import  * as THREE from "three"; 
import { useFrame } from '@react-three/fiber'

export function Avatar(props) {
  const {animation} = props;
  const { headFollow, cursorFollow }= useControls({
    headFollow: false,
    cursorFollow: false,
  });
  const group = useRef()
  const { nodes, materials } = useGLTF('models/65b10d74a8cd1dfdd70b6dd1.glb')

  const {animations: typingAnimations} = useFBX("animations/Standing Greeting.fbx")
  const {animations: standingAnimations} = useFBX("animations/Standing Idle.fbx")
  const {animations: fallingAnimations} = useFBX("animations/Falling Idle.fbx")

  typingAnimations[0].name = "Hello";
  standingAnimations[0].name = "Standing";
  fallingAnimations[0].name = "Falling";

  const {actions} = useAnimations(typingAnimations, group );
  useFrame((state)=>{
    if (headFollow) {    
    group.current.getObjectByName("Head").lookAt(state.camera.position)
  }
  if (cursorFollow) {
    const target= new THREE.Vector3(state.mouse.x, state.mouse.y, 1);
    group.current.getObjectByName("Spine2").lookAt(target);
  }
  });


  useEffect(()=>{
actions[animation].reset().play()
  },[]);



  return (
   
    <group {...props} ref={group} dispose={null}>
       <group rotation-x={-Math.PI / 2}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} />
      <skinnedMesh geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
    </group>
    </group>
  )
}

useGLTF.preload('models/65b10d74a8cd1dfdd70b6dd1.glb')
